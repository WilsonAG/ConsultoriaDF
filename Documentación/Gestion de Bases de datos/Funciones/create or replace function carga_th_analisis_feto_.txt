create or replace function carga_th_analisis_feto_G12(vanio int,vtrimestre int)
return number
is 
    cursor c_th_tiempo is 
    select id_tiempo,anio,trimestre,mes
    from d_tiempo
        where anio = vanio
        and trimestre= vtrimestre
    order by id_tiempo;

    cursor c_th_ubic is 
    select id_ubicacion, id_provincia, id_canton, id_parroquia 
    from d_ubicacion
    where id_provincia <> 90
    and
    id_provincia in (select distinct id_provincia from defunciones)
    order by id_ubicacion;
    
    

    cursor c_causa_fetal is 
    select id_d_c_fetal, id_causa_fetal,causa_fetal
    from d_causa_fetal 
    where 
    id_causa_fetal in (select distinct id_causa_fetal from defunciones)
    order by id_d_c_fetal;



    --------------- definición de registros
    r_tiempo c_th_tiempo%rowtype;
    r_ubic c_th_ubic%rowtype;    
    r_causa_fetal c_causa_fetal%rowtype;


    --------------------
    v_id_dim_tiempo int := 0 ; 
    v_num_iter int := 0 ;
    v_carga int := 0 ;
    r1 int ;
    r2 int ;

BEGIN 
-- Verifica que no se tenga cargado el periodo solicitado a traves de los parámetros de entrada año y trimerstre de la función
select id_tiempo into v_id_dim_tiempo
 from d_tiempo 
 where anio = vanio and trimestre = vtrimestre and mes is null;
select count(*) into v_carga
 from th_analisis_feto
 where id_tiempo = v_id_dim_tiempo;

----- determinar rango de mes de inicio y fin del trimestre ingresado
if vtrimestre =1 then 
        r1:=1;
        r2:=3;
    elsif vtrimestre=2 then
        r1:=4;
        r2:=6;
    elsif vtrimestre=3 then
        r1:=7;
        r2:=9;
    elsif vtrimestre=4 then
        r1:=10;
        r2:=12;
end if ;
if v_carga > 0 then
   RETURN v_num_iter;
end if;
-------- Análisis en base a la dimensión tiempo
OPEN c_th_tiempo;
fetch c_th_tiempo into r_tiempo; -- campos de la dimension tiempo

while c_th_tiempo%found loop

    if vtrimestre = 4 then
    begin
       insert into th_analisis_feto(id_tiempo,id_ubicacion, id_d_c_fetal,id_estado_civil,sexo,prod_emba,n_muertes)
                   select r_tiempo.id_tiempo,null,null,id_estado_civil, to_number(sexo),prod_emba,count(*)
                     from defunciones 
                    where to_number(anio_fall)  = r_tiempo.anio
                 group by id_estado_civil,to_number(sexo),prod_emba
                 having count(*) > 0;
            /*Exeption manejo de retorno nulo  */    
    EXCEPTION 
        WHEN NO_DATA_FOUND THEN 
            v_num_iter := v_num_iter +1;
        WHEN OTHERS THEN
            v_num_iter := v_num_iter +1;
    end;
                 commit;
    elsif r_tiempo.trimestre is not null and r_tiempo.mes is null then
    begin
       insert into th_analisis_feto(id_tiempo,id_ubicacion, id_d_c_fetal,id_estado_civil,sexo,prod_emba,n_muertes)
                   select r_tiempo.id_tiempo,null,null,id_estado_civil, to_number(sexo),prod_emba,count(*)
                     from defunciones 
                    where to_number(anio_fall)  = r_tiempo.anio
                    and mes_fall between r1 and r2
                 group by id_estado_civil,to_number(sexo),prod_emba
                 having count(*) > 0;
            /*Exeption manejo de retorno nulo  */    
    EXCEPTION 
        WHEN NO_DATA_FOUND THEN 
            v_num_iter := v_num_iter +1;
        WHEN OTHERS THEN
            v_num_iter := v_num_iter +1;
    end;
                 commit;

    elsif r_tiempo.trimestre is not null and r_tiempo.mes is not null then  
        begin
          insert into th_analisis_feto(id_tiempo,id_ubicacion, id_d_c_fetal,id_estado_civil,sexo,prod_emba,n_muertes)
                   select r_tiempo.id_tiempo,null,null,id_estado_civil, to_number(sexo),prod_emba,count(*)
                     from defunciones 
                    where to_number(anio_fall)  = r_tiempo.anio
                    and mes_fall = r_tiempo.mes
                 group by id_estado_civil,to_number(sexo),prod_emba
                 having count(*) > 0;  
        /*Exeption manejo de retorno nulo  */    
         EXCEPTION 
            WHEN NO_DATA_FOUND THEN 
                v_num_iter := v_num_iter +1;
            WHEN OTHERS THEN
                v_num_iter := v_num_iter +1;
            end;
                 commit;
    end if;

    -------- Análisis en base a la dimensión tiempo + ubicación geográfica
    OPEN c_th_ubic;

    fetch c_th_ubic into r_ubic; -- campos de la dimension tiempo --100

    while c_th_ubic%found loop

        if vtrimestre = 4 then
           if r_ubic.id_parroquia is null and r_ubic.id_canton is null then
        begin
           insert into th_analisis_feto(id_tiempo,id_ubicacion, id_d_c_fetal,id_estado_civil,sexo,prod_emba,n_muertes)
                   select r_tiempo.id_tiempo,r_ubic.id_ubicacion,null,id_estado_civil, to_number(sexo),prod_emba,count(*)
                            from defunciones 
                          where to_number(anio_fall)  = r_tiempo.anio
                            and prov_fall = r_ubic.id_provincia
                       group by id_estado_civil,to_number(sexo),prod_emba
                       having count(*) > 0;
        /*Exeption manejo de retorno nulo  */    
        EXCEPTION 
            WHEN NO_DATA_FOUND THEN 
                v_num_iter := v_num_iter +1;
            WHEN OTHERS THEN
                v_num_iter := v_num_iter +1;
            end;
                       commit;

           elsif r_ubic.id_parroquia is null and r_ubic.id_canton is not null then
            begin
              insert into th_analisis_feto(id_tiempo,id_ubicacion, id_d_c_fetal,id_estado_civil,sexo,prod_emba,n_muertes)
                   select r_tiempo.id_tiempo,r_ubic.id_ubicacion,null,id_estado_civil, to_number(sexo),prod_emba,count(*)
                            from defunciones 
                          where to_number(anio_fall)  = r_tiempo.anio
                            and prov_fall = r_ubic.id_provincia
                                    and cant_fall = r_ubic.id_provincia||r_ubic.id_canton
                       group by id_estado_civil,to_number(sexo),prod_emba
                       having count(*) > 0;
            /*Exeption manejo de retorno nulo  */    
            EXCEPTION 
                WHEN NO_DATA_FOUND THEN 
                    v_num_iter := v_num_iter +1;
                WHEN OTHERS THEN
                    v_num_iter := v_num_iter +1;
            end;
                       commit;

           elsif r_ubic.id_parroquia is not null and r_ubic.id_canton is not null then
            begin
              insert into th_analisis_feto(id_tiempo,id_ubicacion, id_d_c_fetal,id_estado_civil,sexo,prod_emba,n_muertes)
                   select r_tiempo.id_tiempo,r_ubic.id_ubicacion,null,id_estado_civil, to_number(sexo),prod_emba,count(*)
                            from defunciones 
                          where to_number(anio_fall) = r_tiempo.anio
                            and prov_fall = r_ubic.id_provincia
                                    and cant_fall = r_ubic.id_provincia||r_ubic.id_canton
                                    and parro_fall = r_ubic.id_provincia||r_ubic.id_canton||r_ubic.id_parroquia
                       group by id_estado_civil,to_number(sexo),prod_emba
                       having count(*) > 0;
                       commit;
            /*Exeption manejo de retorno nulo  */    
            EXCEPTION 
                WHEN NO_DATA_FOUND THEN 
                    v_num_iter := v_num_iter +1;
                WHEN OTHERS THEN
                    v_num_iter := v_num_iter +1;
            end;

           end if;            

       elsif r_tiempo.trimestre is not null and r_tiempo.mes is null then
           if r_ubic.id_parroquia is null and r_ubic.id_canton is null then
           begin
             insert into th_analisis_feto(id_tiempo,id_ubicacion, id_d_c_fetal,id_estado_civil,sexo,prod_emba,n_muertes)
                   select r_tiempo.id_tiempo,r_ubic.id_ubicacion,null,id_estado_civil, to_number(sexo),prod_emba,count(*)
                            from defunciones 
                        where to_number(anio_fall)  = r_tiempo.anio
                          and mes_fall between r1 and r2
                          and prov_fall = r_ubic.id_provincia
                         group by id_estado_civil,to_number(sexo),prod_emba
                         having count(*) > 0;
            /*Exeption manejo de retorno nulo  */    
            EXCEPTION 
                WHEN NO_DATA_FOUND THEN 
                    v_num_iter := v_num_iter +1;
                WHEN OTHERS THEN
                    v_num_iter := v_num_iter +1;
            end;
              commit;

           elsif r_ubic.id_parroquia is null and r_ubic.id_canton is not null then
            begin
              insert into th_analisis_feto(id_tiempo,id_ubicacion, id_d_c_fetal,id_estado_civil,sexo,prod_emba,n_muertes)
                   select r_tiempo.id_tiempo,r_ubic.id_ubicacion,null,id_estado_civil, to_number(sexo),prod_emba,count(*)
                            from defunciones 
                          where to_number(anio_fall)  = r_tiempo.anio
                            and mes_fall between r1 and r2
                            and prov_fall = r_ubic.id_provincia
                                    and cant_fall = r_ubic.id_provincia||r_ubic.id_canton
                       group by id_estado_civil,to_number(sexo),prod_emba
                       having count(*) > 0;
            /*Exeption manejo de retorno nulo  */    
            EXCEPTION 
                WHEN NO_DATA_FOUND THEN 
                    v_num_iter := v_num_iter +1;
                WHEN OTHERS THEN
                    v_num_iter := v_num_iter +1;
            end;
               commit;

           elsif r_ubic.id_parroquia is not null and r_ubic.id_canton is not null then
            begin
              insert into th_analisis_feto(id_tiempo,id_ubicacion, id_d_c_fetal,id_estado_civil,sexo,prod_emba,n_muertes)
                   select r_tiempo.id_tiempo,r_ubic.id_ubicacion,null,id_estado_civil, to_number(sexo),prod_emba,count(*)
                            from defunciones 
                          where to_number(anio_fall) = r_tiempo.anio
                            and mes_fall between r1 and r2
                            and prov_fall = r_ubic.id_provincia
                                    and cant_fall = r_ubic.id_provincia||r_ubic.id_canton
                                    and parro_fall = r_ubic.id_provincia||r_ubic.id_canton||r_ubic.id_parroquia
                       group by id_estado_civil,to_number(sexo),prod_emba
                       having count(*) > 0;
            /*Exeption manejo de retorno nulo  */    
            EXCEPTION 
                WHEN NO_DATA_FOUND THEN 
                    v_num_iter := v_num_iter +1;
                WHEN OTHERS THEN
                    v_num_iter := v_num_iter +1;
            end;
               commit;

           end if;            

        elsif r_tiempo.trimestre is not null and r_tiempo.mes is not null then  
           -- analiza por año - mes - provincia     
           if r_ubic.id_parroquia is null and r_ubic.id_canton is null then
            begin
                  insert into th_analisis_feto(id_tiempo,id_ubicacion, id_d_c_fetal,id_estado_civil,sexo,prod_emba,n_muertes)
                   select r_tiempo.id_tiempo,r_ubic.id_ubicacion,null,id_estado_civil, to_number(sexo),prod_emba,count(*)
                            from defunciones 
                            where to_number(anio_fall)  = r_tiempo.anio
                              and mes_fall = r_tiempo.mes
                              and prov_fall = r_ubic.id_provincia
                             group by id_estado_civil,to_number(sexo),prod_emba
                             having count(*) > 0;
            /*Exeption manejo de retorno nulo  */    
            EXCEPTION 
                WHEN NO_DATA_FOUND THEN 
                    v_num_iter := v_num_iter +1;
                WHEN OTHERS THEN
                    v_num_iter := v_num_iter +1;
            end;
                  commit;

           elsif r_ubic.id_parroquia is null and r_ubic.id_canton is not null then
              -- analiza por año - mes - provincia - canton
            begin
              insert into th_analisis_feto(id_tiempo,id_ubicacion, id_d_c_fetal,id_estado_civil,sexo,prod_emba,n_muertes)
                   select r_tiempo.id_tiempo,r_ubic.id_ubicacion,null,id_estado_civil, to_number(sexo),prod_emba,count(*)
                            from defunciones 
                          where to_number(anio_fall)  = r_tiempo.anio
                            and mes_fall = r_tiempo.mes
                            and prov_fall = r_ubic.id_provincia
                                    and cant_fall = r_ubic.id_provincia||r_ubic.id_canton
                       group by id_estado_civil,to_number(sexo),prod_emba
                       having count(*) > 0;
            /*Exeption manejo de retorno nulo  */    
            EXCEPTION 
                WHEN NO_DATA_FOUND THEN 
                    v_num_iter := v_num_iter +1;
                WHEN OTHERS THEN
                    v_num_iter := v_num_iter +1;
            end;
              commit; --200

           elsif r_ubic.id_parroquia is not null and r_ubic.id_canton is not null then
              -- analiza por año - mes - provincia - canton - parroquia
            begin
              insert into th_analisis_feto(id_tiempo,id_ubicacion, id_d_c_fetal,id_estado_civil,sexo,prod_emba,n_muertes)
                   select r_tiempo.id_tiempo,r_ubic.id_ubicacion,null,id_estado_civil, to_number(sexo),prod_emba,count(*)
                            from defunciones 
                          where to_number(anio_fall)  = r_tiempo.anio
                            and mes_fall = r_tiempo.mes
                            and prov_fall = r_ubic.id_provincia
                              and cant_fall = r_ubic.id_provincia||r_ubic.id_canton
                            and parro_fall = r_ubic.id_provincia||r_ubic.id_canton||r_ubic.id_parroquia
                       group by id_estado_civil,to_number(sexo),prod_emba
                       having count(*) > 0;
            /*Exeption manejo de retorno nulo  */    
            EXCEPTION 
                WHEN NO_DATA_FOUND THEN 
                    v_num_iter := v_num_iter +1;
                WHEN OTHERS THEN
                    v_num_iter := v_num_iter +1;
            end;
                commit;

           end if;  

        end if;



        -------- Análisis en base a la dimensión tiempo + ubicación geográfica + dimension causa fetal --------------------

        OPEN c_causa_fetal;
        fetch c_causa_fetal into r_causa_fetal; -- campos de la dimension causa fetal
        while c_causa_fetal%found loop

            if vtrimestre = 4 then
                    if r_ubic.id_parroquia is null and r_ubic.id_canton is null then
                      begin  
                       insert into th_analisis_feto(id_tiempo,id_ubicacion, id_d_c_fetal,id_estado_civil,sexo,prod_emba,n_muertes)
                           select r_tiempo.id_tiempo,r_ubic.id_ubicacion,r_causa_fetal.id_d_c_fetal,id_estado_civil, to_number(sexo),prod_emba,count(*)
                                    from defunciones 
                                  where to_number(anio_fall)  = r_tiempo.anio
                                    and prov_fall = r_ubic.id_provincia
                                  --  and cant_fall = r_ubic.id_canton
                                    and id_causa_fetal = r_causa_fetal.id_causa_fetal
                               group by id_estado_civil,to_number(sexo),prod_emba
                               having count(*) > 0;
                            /*Exeption manejo de retorno nulo  */    
                            
                        EXCEPTION 
                            WHEN NO_DATA_FOUND THEN 
                                 v_num_iter := v_num_iter +1;
                            WHEN OTHERS THEN
                                 v_num_iter := v_num_iter +1;
                        end;
                        
                       commit;
                        
                   elsif r_ubic.id_parroquia is null and r_ubic.id_canton is not null then
                     begin 
                       insert into th_analisis_feto(id_tiempo,id_ubicacion, id_d_c_fetal,id_estado_civil,sexo,prod_emba,n_muertes)
                           select r_tiempo.id_tiempo,r_ubic.id_ubicacion,r_causa_fetal.id_d_c_fetal,id_estado_civil, to_number(sexo),prod_emba,count(*)
                                    from defunciones 
                                  where to_number(anio_fall)  = r_tiempo.anio
                                    and prov_fall = r_ubic.id_provincia
                                    and cant_fall = r_ubic.id_provincia||r_ubic.id_canton
                                    and id_causa_fetal = r_causa_fetal.id_causa_fetal
                               group by id_estado_civil,to_number(sexo),prod_emba
                               having count(*) > 0;
                         /*Exeption manejo de retorno nulo  */    
                            
                        EXCEPTION 
                             WHEN NO_DATA_FOUND THEN 
                                  v_num_iter := v_num_iter +1;
                             WHEN OTHERS THEN
                                  v_num_iter := v_num_iter +1;
                         end;
                        
                       commit;
        
                   elsif r_ubic.id_parroquia is not null and r_ubic.id_canton is not null then
                    begin
                       insert into th_analisis_feto(id_tiempo,id_ubicacion, id_d_c_fetal,id_estado_civil,sexo,prod_emba,n_muertes)
                           select r_tiempo.id_tiempo,r_ubic.id_ubicacion,r_causa_fetal.id_d_c_fetal,id_estado_civil, to_number(sexo),prod_emba,count(*)
                                    from defunciones
                                  where to_number(anio_fall)  = r_tiempo.anio
                                    and prov_fall = r_ubic.id_provincia
                                    and cant_fall = r_ubic.id_provincia||r_ubic.id_canton
                                    and parro_fall = r_ubic.id_provincia||r_ubic.id_canton||r_ubic.id_parroquia
                                    and id_causa_fetal = r_causa_fetal.id_causa_fetal
                               group by id_estado_civil,to_number(sexo),prod_emba
                               having count(*) > 0;
                        /*Exeption manejo de retorno nulo  */
                        EXCEPTION 
                            WHEN NO_DATA_FOUND THEN 
                                 v_num_iter := v_num_iter +1;
                            WHEN OTHERS THEN
                                 v_num_iter := v_num_iter +1;
                          end;  
                               
                       commit;
        
                   end if;            
        
               elsif r_tiempo.trimestre is not null and r_tiempo.mes is null then
                   if r_ubic.id_parroquia is null and r_ubic.id_canton is null then
                    begin
                      insert into th_analisis_feto(id_tiempo,id_ubicacion, id_d_c_fetal,id_estado_civil,sexo,prod_emba,n_muertes)
                           select r_tiempo.id_tiempo,r_ubic.id_ubicacion,r_causa_fetal.id_d_c_fetal,id_estado_civil, to_number(sexo),prod_emba,count(*)
                                    from defunciones 
                                where to_number(anio_fall) = r_tiempo.anio ---273
                                  and mes_fall between r1 and r2
                                  and prov_fall = r_ubic.id_provincia
                                  and id_causa_fetal = r_causa_fetal.id_causa_fetal
                               group by id_estado_civil,to_number(sexo),prod_emba
                                 having count(*) > 0;
                                 
                     /*Exeption manejo de retorno nulo  */    
                            
                       EXCEPTION 
                            WHEN NO_DATA_FOUND THEN 
                                 v_num_iter := v_num_iter +1;
                            WHEN OTHERS THEN
                                 v_num_iter := v_num_iter +1;
                     end;
                     commit;
        
                elsif r_ubic.id_parroquia is null and r_ubic.id_canton is not null then
                   begin
                      insert into th_analisis_feto(id_tiempo,id_ubicacion, id_d_c_fetal,id_estado_civil,sexo,prod_emba,n_muertes)
                           select r_tiempo.id_tiempo,r_ubic.id_ubicacion,r_causa_fetal.id_d_c_fetal,id_estado_civil, to_number(sexo),prod_emba,count(*)
                                    from defunciones 
                                  where to_number(anio_fall)  = r_tiempo.anio
                                    and mes_fall between r1 and r2
                                    and prov_fall = r_ubic.id_provincia
                                    and cant_fall = r_ubic.id_provincia||r_ubic.id_canton
                                    and id_causa_fetal = r_causa_fetal.id_causa_fetal
                               group by id_estado_civil,to_number(sexo),prod_emba
                               having count(*) > 0;
                      /*Exeption manejo de retorno nulo  */    
                            
                        EXCEPTION 
                            WHEN NO_DATA_FOUND THEN 
                                 v_num_iter := v_num_iter +1;
                            WHEN OTHERS THEN
                                 v_num_iter := v_num_iter +1;
                        end;
                      commit;
        
                elsif r_ubic.id_parroquia is not null and r_ubic.id_canton is not null then
                    begin
                      insert into th_analisis_feto(id_tiempo,id_ubicacion, id_d_c_fetal,id_estado_civil,sexo,prod_emba,n_muertes)
                           select r_tiempo.id_tiempo,r_ubic.id_ubicacion,r_causa_fetal.id_d_c_fetal,id_estado_civil, to_number(sexo),prod_emba,count(*)
                                    from defunciones 
                                  where to_number(anio_fall)  = r_tiempo.anio
                                    and mes_fall between r1 and r2
                                    and prov_fall = r_ubic.id_provincia
                                    and cant_fall = r_ubic.id_provincia||r_ubic.id_canton
                                    and parro_fall = r_ubic.id_provincia||r_ubic.id_canton||r_ubic.id_parroquia
                                    and id_causa_fetal = r_causa_fetal.id_causa_fetal
                               group by id_estado_civil,to_number(sexo),prod_emba
                               having count(*) > 0;
                            /*Exeption manejo de retorno nulo  */
                        EXCEPTION 
                            WHEN NO_DATA_FOUND THEN 
                                v_num_iter := v_num_iter +1;
                            WHEN OTHERS THEN
                                v_num_iter := v_num_iter +1;
                        end;
                            
                        commit;
                   end if;            
        
                elsif r_tiempo.trimestre is not null and r_tiempo.mes is not null then  
                   -- analiza por año - mes - provincia -causa fetal 
                   if r_ubic.id_parroquia is null and r_ubic.id_canton is null then
                         begin
                          insert into th_analisis_feto(id_tiempo,id_ubicacion, id_d_c_fetal,id_estado_civil,sexo,prod_emba,n_muertes)
                           select r_tiempo.id_tiempo,r_ubic.id_ubicacion,r_causa_fetal.id_d_c_fetal,id_estado_civil, to_number(sexo),prod_emba,count(*)
                                    from defunciones 
                                    where to_number(anio_fall)  = r_tiempo.anio
                                      and mes_fall = r_tiempo.mes
                                      and prov_fall = r_ubic.id_provincia
                                      and id_causa_fetal = r_causa_fetal.id_causa_fetal
                                group by id_estado_civil,to_number(sexo),prod_emba
                                     having count(*) > 0;
                          /*Exeption manejo de retorno nulo  */    
                            
                            EXCEPTION 
                            WHEN NO_DATA_FOUND THEN 
                                 v_num_iter := v_num_iter +1;
                            WHEN OTHERS THEN
                                 v_num_iter := v_num_iter +1;
                          end;
                           commit;
        
                   elsif r_ubic.id_parroquia is null and r_ubic.id_canton is not null then
                      begin
                      -- analiza por año - mes - provincia - canton -causa fetal
                      insert into th_analisis_feto(id_tiempo,id_ubicacion, id_d_c_fetal,id_estado_civil,sexo,prod_emba,n_muertes)
                           select r_tiempo.id_tiempo,r_ubic.id_ubicacion,r_causa_fetal.id_d_c_fetal,id_estado_civil, to_number(sexo),prod_emba,count(*)
                                    from defunciones 
                                  where to_number(anio_fall)  = r_tiempo.anio
                                    and mes_fall = r_tiempo.mes
                                    and prov_fall = r_ubic.id_provincia
                                    and cant_fall = r_ubic.id_provincia||r_ubic.id_canton
                                    and id_causa_fetal = r_causa_fetal.id_causa_fetal
                               group by id_estado_civil,to_number(sexo),prod_emba
                               having count(*) > 0;
                         /*Exeption manejo de retorno nulo  */      
                         EXCEPTION 
                            WHEN NO_DATA_FOUND THEN 
                                 v_num_iter := v_num_iter +1;
                            WHEN OTHERS THEN
                                 v_num_iter := v_num_iter +1;
                        end;
                         commit;
        
                   elsif r_ubic.id_parroquia is not null and r_ubic.id_canton is not null then
                      begin
                      -- analiza por año - mes - provincia - canton - parroquia -causa fetal
                      insert into th_analisis_feto(id_tiempo,id_ubicacion, id_d_c_fetal,id_estado_civil,sexo,prod_emba,n_muertes)
                           select r_tiempo.id_tiempo,r_ubic.id_ubicacion,r_causa_fetal.id_d_c_fetal,id_estado_civil, to_number(sexo),prod_emba,count(*)
                                    from defunciones 
                                  where to_number(anio_fall)  = r_tiempo.anio
                                    and mes_fall = r_tiempo.mes
                                    and prov_fall = r_ubic.id_provincia
                                    and cant_fall = r_ubic.id_provincia||r_ubic.id_canton
                                    and parro_fall = r_ubic.id_provincia||r_ubic.id_canton||r_ubic.id_parroquia
                                    and id_causa_fetal = r_causa_fetal.id_causa_fetal
                               group by id_estado_civil,to_number(sexo),prod_emba
                               having count(*) > 0;
                    /*Exeption manejo de retorno nulo  */    
                      EXCEPTION 
                            WHEN NO_DATA_FOUND THEN 
                                 v_num_iter := v_num_iter +1;
                            WHEN OTHERS THEN
                                 v_num_iter := v_num_iter +1;
                    end;
                    commit;
                   end if;  
        
                end if;
                fetch c_causa_fetal into r_causa_fetal;
                end loop; --causa fetal
        close c_causa_fetal; --- se cierra el cursor de dimension causa fetal
        fetch c_th_ubic into r_ubic;
-------------------------------------------------------------------

    end loop; -- Ubicacion geográfica
    close  c_th_ubic;
    fetch c_th_tiempo into r_tiempo; 
end loop;  -- Tiempo
close  c_th_tiempo;
commit;
RETURN v_num_iter;
END;